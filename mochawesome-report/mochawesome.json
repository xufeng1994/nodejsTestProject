{
  "stats": {
    "suites": 3,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2017-10-03T14:18:02.099Z",
    "end": "2017-10-03T14:18:32.184Z",
    "duration": 30085,
    "testsRegistered": 11,
    "passPercent": 9.1,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 10,
    "hasSkipped": true,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "hooks",
        "suites": [
          {
            "title": "cnode测试用例",
            "suites": [
              {
                "title": "用户注册操作",
                "suites": [],
                "tests": [
                  {
                    "title": "打开cnode，点击登录按钮",
                    "fullTitle": "cnode测试用例 用户注册操作 打开cnode，点击登录按钮",
                    "timedOut": false,
                    "duration": 22839,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "async \n                //    web = new driver.Builder().forBrowser('chrome').build();\n                await web.get(\"http://192.168.198.129:3000\")",
                    "err": {},
                    "isRoot": false,
                    "uuid": "162fb194-3416-4a89-8b22-2b59aeb9b48e",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "最大化窗口",
                    "fullTitle": "cnode测试用例 用户注册操作 最大化窗口",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "async function () {\n                await web.manage().window().setSize(1366, 768)",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9d50834a-4320-4d8b-adb5-f8b458a5ed8a",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": true
                  },
                  {
                    "title": "点击注册按钮",
                    "fullTitle": "cnode测试用例 用户注册操作 点击注册按钮",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "async function () {\n                await web.findElement(by.css('a[href=\"/signup\"]')).click()",
                    "err": {},
                    "isRoot": false,
                    "uuid": "52ebf45e-ef96-4ca8-889f-547f7b8fbd9e",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": true
                  },
                  {
                    "title": "直接点击注册按钮",
                    "fullTitle": "cnode测试用例 用户注册操作 直接点击注册按钮",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "async function () {\n                //await web.sleep(2000)\n                await web.findElement(by.css(\".span-primary\")).click()",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2575448d-a4db-4a9d-95a4-6338eae7749a",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": true
                  },
                  {
                    "title": "输入用户名，不输入密码点击注册",
                    "fullTitle": "cnode测试用例 用户注册操作 输入用户名，不输入密码点击注册",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "async function () {\n                await web.findElement(by.name('loginname')).sendKeys(timeCount)\n                await web.findElement(by.css('.span-primary')).click()\n                //await web.sleep(2000)",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f75618b6-8c9a-4f6b-aeae-70cbd6aba47a",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": true
                  },
                  {
                    "title": "输入用户名中存在特殊符号“！@#￥%”，点击注册按钮",
                    "fullTitle": "cnode测试用例 用户注册操作 输入用户名中存在特殊符号“！@#￥%”，点击注册按钮",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "async function () {\n                await web.findElement(by.name('loginname')).sendKeys(timeCount+\"!@#$\")\n                await web.findElement(by.name('pass')).sendKeys(\"123456\")\n                await web.findElement(by.name('re_pass')).sendKeys(\"123456\")\n                await web.findElement(by.name('email')).sendKeys(\"123456@qwer.com\")\n                await web.findElement(by.css('.span-primary')).click()\n                //await web.sleep(2000)",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3d71dd09-a360-4ed3-adf0-a16aa619eadf",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": true
                  },
                  {
                    "title": "输入用户名少于5个字符数，点击注册按钮",
                    "fullTitle": "cnode测试用例 用户注册操作 输入用户名少于5个字符数，点击注册按钮",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "async function () {\n                await web.findElement(by.name('loginname')).sendKeys(\"0123\")\n                await web.findElement(by.name('pass')).sendKeys(\"123456\")\n                await web.findElement(by.name('re_pass')).sendKeys(\"123456\")\n                await web.findElement(by.name('email')).sendKeys(\"qqqqq@qwer.com\")\n                await web.findElement(by.css('.span-primary')).click()\n                //await web.sleep(2000)",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d91e7beb-d885-4bea-ad95-6b3204956008",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": true
                  },
                  {
                    "title": "输入错误的邮件格",
                    "fullTitle": "cnode测试用例 用户注册操作 输入错误的邮件格",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "async function () {\n                await web.findElement(by.name('loginname')).sendKeys(timeCount)\n                await web.findElement(by.name('pass')).sendKeys(\"123456\")\n                await web.findElement(by.name('re_pass')).sendKeys(\"123456\")\n                await web.findElement(by.name('email')).sendKeys(\"wrwerq@qwer.\")\n                await web.findElement(by.css('.span-primary')).click()\n                //await web.sleep(2000)",
                    "err": {},
                    "isRoot": false,
                    "uuid": "335d14a6-5bbe-4cb5-9d27-6015fd986dc9",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": true
                  },
                  {
                    "title": "输入确认密码与原密码不一致",
                    "fullTitle": "cnode测试用例 用户注册操作 输入确认密码与原密码不一致",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "async function () {\n                await web.findElement(by.name('loginname')).sendKeys(timeCount)\n                await web.findElement(by.name('pass')).sendKeys(\"123456qwer\")\n                await web.findElement(by.name('re_pass')).sendKeys(\"qwer123456\")\n                await web.findElement(by.name('email')).sendKeys(\"qqqqq@qwer.com\")\n                await web.findElement(by.css('.span-primary')).click()\n                //await web.sleep(2000)",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fa54c1ef-0b6b-45d1-b912-4e5827d2b01b",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": true
                  },
                  {
                    "title": "输入已注册的邮箱",
                    "fullTitle": "cnode测试用例 用户注册操作 输入已注册的邮箱",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "async function () {\n                await web.findElement(by.name('loginname')).sendKeys(timeCount)\n                await web.findElement(by.name('pass')).sendKeys(\"123456qwer\")\n                await web.findElement(by.name('re_pass')).sendKeys(\"qwer123456\")\n                await web.findElement(by.name('email')).sendKeys(\"914650562@qq.com\")\n                await web.findElement(by.css('.span-primary')).click()\n                //await web.sleep(2000)",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b69763e6-c239-41a4-83fc-fbf858eb44f8",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": true
                  },
                  {
                    "title": "输入可注册的用户名密码和邮箱",
                    "fullTitle": "cnode测试用例 用户注册操作 输入可注册的用户名密码和邮箱",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "async function () {\n                await web.findElement(by.name('loginname')).sendKeys(\"000000\")\n                await web.findElement(by.name('pass')).sendKeys(\"123456\")\n                await web.findElement(by.name('re_pass')).sendKeys(\"123456\")\n                await web.findElement(by.name('email')).sendKeys(timeCount + \"@qwer.com\")\n                //await web.sleep(2000)\n                await web.findElement(by.css('.span-primary')).click().then(function () {\n                    MongoClient.connect(url, function (err, db) {\n                        assert.equal(null, err);\n                        console.log(\"Connected correctly to server\");\n                        let collection = db.collection(\"users\")\n                        collection.find().toArray(\n                            function (err, docs) {\n                                assert.equal(null, err);\n                                // console.log(docs)\n                            }\n                        )\n                        collection.findOne({ name: `${sunny}` }, function (err, docs) {\n                            console.log(docs.name)\n                            assert.equal(err, null)\n                            assert.equal(`${sunny}`, docs.name)\n                        })\n                        collection.updateOne({ name: `${sunny}` }, { $set: { \"active\": true } }, function (err, docs) {\n                            assert.equal(null, err);\n                            // console.log(docs)\n                        })\n                        db.close();\n                    });\n                })",
                    "err": {},
                    "isRoot": false,
                    "uuid": "157234d7-889f-4e54-afea-808321d97dab",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": true
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 60000,
                "file": "\\uiTest\\userTest\\multipe.js",
                "uuid": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                "beforeHooks": [],
                "afterHooks": [],
                "fullFile": "D:\\AutoTest\\MyProject\\nodejsTestProject\\uiTest\\userTest\\multipe.js",
                "passes": [
                  {
                    "title": "打开cnode，点击登录按钮",
                    "fullTitle": "cnode测试用例 用户注册操作 打开cnode，点击登录按钮",
                    "timedOut": false,
                    "duration": 22839,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "async \n                //    web = new driver.Builder().forBrowser('chrome').build();\n                await web.get(\"http://192.168.198.129:3000\")",
                    "err": {},
                    "isRoot": false,
                    "uuid": "162fb194-3416-4a89-8b22-2b59aeb9b48e",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [
                  {
                    "title": "最大化窗口",
                    "fullTitle": "cnode测试用例 用户注册操作 最大化窗口",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "async function () {\n                await web.manage().window().setSize(1366, 768)",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9d50834a-4320-4d8b-adb5-f8b458a5ed8a",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": true
                  },
                  {
                    "title": "点击注册按钮",
                    "fullTitle": "cnode测试用例 用户注册操作 点击注册按钮",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "async function () {\n                await web.findElement(by.css('a[href=\"/signup\"]')).click()",
                    "err": {},
                    "isRoot": false,
                    "uuid": "52ebf45e-ef96-4ca8-889f-547f7b8fbd9e",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": true
                  },
                  {
                    "title": "直接点击注册按钮",
                    "fullTitle": "cnode测试用例 用户注册操作 直接点击注册按钮",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "async function () {\n                //await web.sleep(2000)\n                await web.findElement(by.css(\".span-primary\")).click()",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2575448d-a4db-4a9d-95a4-6338eae7749a",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": true
                  },
                  {
                    "title": "输入用户名，不输入密码点击注册",
                    "fullTitle": "cnode测试用例 用户注册操作 输入用户名，不输入密码点击注册",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "async function () {\n                await web.findElement(by.name('loginname')).sendKeys(timeCount)\n                await web.findElement(by.css('.span-primary')).click()\n                //await web.sleep(2000)",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f75618b6-8c9a-4f6b-aeae-70cbd6aba47a",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": true
                  },
                  {
                    "title": "输入用户名中存在特殊符号“！@#￥%”，点击注册按钮",
                    "fullTitle": "cnode测试用例 用户注册操作 输入用户名中存在特殊符号“！@#￥%”，点击注册按钮",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "async function () {\n                await web.findElement(by.name('loginname')).sendKeys(timeCount+\"!@#$\")\n                await web.findElement(by.name('pass')).sendKeys(\"123456\")\n                await web.findElement(by.name('re_pass')).sendKeys(\"123456\")\n                await web.findElement(by.name('email')).sendKeys(\"123456@qwer.com\")\n                await web.findElement(by.css('.span-primary')).click()\n                //await web.sleep(2000)",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3d71dd09-a360-4ed3-adf0-a16aa619eadf",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": true
                  },
                  {
                    "title": "输入用户名少于5个字符数，点击注册按钮",
                    "fullTitle": "cnode测试用例 用户注册操作 输入用户名少于5个字符数，点击注册按钮",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "async function () {\n                await web.findElement(by.name('loginname')).sendKeys(\"0123\")\n                await web.findElement(by.name('pass')).sendKeys(\"123456\")\n                await web.findElement(by.name('re_pass')).sendKeys(\"123456\")\n                await web.findElement(by.name('email')).sendKeys(\"qqqqq@qwer.com\")\n                await web.findElement(by.css('.span-primary')).click()\n                //await web.sleep(2000)",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d91e7beb-d885-4bea-ad95-6b3204956008",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": true
                  },
                  {
                    "title": "输入错误的邮件格",
                    "fullTitle": "cnode测试用例 用户注册操作 输入错误的邮件格",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "async function () {\n                await web.findElement(by.name('loginname')).sendKeys(timeCount)\n                await web.findElement(by.name('pass')).sendKeys(\"123456\")\n                await web.findElement(by.name('re_pass')).sendKeys(\"123456\")\n                await web.findElement(by.name('email')).sendKeys(\"wrwerq@qwer.\")\n                await web.findElement(by.css('.span-primary')).click()\n                //await web.sleep(2000)",
                    "err": {},
                    "isRoot": false,
                    "uuid": "335d14a6-5bbe-4cb5-9d27-6015fd986dc9",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": true
                  },
                  {
                    "title": "输入确认密码与原密码不一致",
                    "fullTitle": "cnode测试用例 用户注册操作 输入确认密码与原密码不一致",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "async function () {\n                await web.findElement(by.name('loginname')).sendKeys(timeCount)\n                await web.findElement(by.name('pass')).sendKeys(\"123456qwer\")\n                await web.findElement(by.name('re_pass')).sendKeys(\"qwer123456\")\n                await web.findElement(by.name('email')).sendKeys(\"qqqqq@qwer.com\")\n                await web.findElement(by.css('.span-primary')).click()\n                //await web.sleep(2000)",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fa54c1ef-0b6b-45d1-b912-4e5827d2b01b",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": true
                  },
                  {
                    "title": "输入已注册的邮箱",
                    "fullTitle": "cnode测试用例 用户注册操作 输入已注册的邮箱",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "async function () {\n                await web.findElement(by.name('loginname')).sendKeys(timeCount)\n                await web.findElement(by.name('pass')).sendKeys(\"123456qwer\")\n                await web.findElement(by.name('re_pass')).sendKeys(\"qwer123456\")\n                await web.findElement(by.name('email')).sendKeys(\"914650562@qq.com\")\n                await web.findElement(by.css('.span-primary')).click()\n                //await web.sleep(2000)",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b69763e6-c239-41a4-83fc-fbf858eb44f8",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": true
                  },
                  {
                    "title": "输入可注册的用户名密码和邮箱",
                    "fullTitle": "cnode测试用例 用户注册操作 输入可注册的用户名密码和邮箱",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "async function () {\n                await web.findElement(by.name('loginname')).sendKeys(\"000000\")\n                await web.findElement(by.name('pass')).sendKeys(\"123456\")\n                await web.findElement(by.name('re_pass')).sendKeys(\"123456\")\n                await web.findElement(by.name('email')).sendKeys(timeCount + \"@qwer.com\")\n                //await web.sleep(2000)\n                await web.findElement(by.css('.span-primary')).click().then(function () {\n                    MongoClient.connect(url, function (err, db) {\n                        assert.equal(null, err);\n                        console.log(\"Connected correctly to server\");\n                        let collection = db.collection(\"users\")\n                        collection.find().toArray(\n                            function (err, docs) {\n                                assert.equal(null, err);\n                                // console.log(docs)\n                            }\n                        )\n                        collection.findOne({ name: `${sunny}` }, function (err, docs) {\n                            console.log(docs.name)\n                            assert.equal(err, null)\n                            assert.equal(`${sunny}`, docs.name)\n                        })\n                        collection.updateOne({ name: `${sunny}` }, { $set: { \"active\": true } }, function (err, docs) {\n                            assert.equal(null, err);\n                            // console.log(docs)\n                        })\n                        db.close();\n                    });\n                })",
                    "err": {},
                    "isRoot": false,
                    "uuid": "157234d7-889f-4e54-afea-808321d97dab",
                    "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
                    "isHook": false,
                    "skipped": true
                  }
                ],
                "hasBeforeHooks": false,
                "hasAfterHooks": false,
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 11,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 10,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": true,
                "duration": 22839,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 60000,
            "file": "\\uiTest\\userTest\\multipe.js",
            "uuid": "21355dc2-40c0-45b1-aa9f-18a7e6177a2b",
            "beforeHooks": [
              {
                "title": "\"before all\" hook: before",
                "fullTitle": "hooks cnode测试用例 \"before all\" hook: before",
                "timedOut": false,
                "duration": 6910,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "async function () {\n            console.log(\"before\")\n            web = new driver.Builder().forBrowser('chrome').setChromeOptions(new chrome.Options().headless()).build();\n            return web.executeScript(function () {\n                return {\n                    width: window.screen.availWidth,\n                    height: window.screen.availHeight\n                }\n            })\n            await web.manage().window().setSize(\"1366\", \"768\")",
                "err": {},
                "isRoot": false,
                "uuid": "0d32e1c2-1e00-4d24-8159-1291ef52251c",
                "parentUUID": "21355dc2-40c0-45b1-aa9f-18a7e6177a2b",
                "isHook": true,
                "skipped": false
              },
              {
                "title": "\"before each\" hook: beforeEach",
                "fullTitle": "hooks cnode测试用例 \"before each\" hook: beforeEach",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "//await web.sleep(2000)\nconsole.log(\"beforeEach\")",
                "err": {},
                "isRoot": false,
                "uuid": "d51664bf-93eb-4ff7-9b54-8f93f5d87032",
                "parentUUID": "21355dc2-40c0-45b1-aa9f-18a7e6177a2b",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [
              {
                "title": "\"after all\" hook: after",
                "fullTitle": "hooks cnode测试用例 \"after all\" hook: after",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "console.log(\"after\")",
                "err": {},
                "isRoot": false,
                "uuid": "da898046-ce54-4fda-8ec5-9b1fdc3a3924",
                "parentUUID": "21355dc2-40c0-45b1-aa9f-18a7e6177a2b",
                "isHook": true,
                "skipped": false
              },
              {
                "title": "\"after each\" hook: afterEach for \"打开cnode，点击登录按钮\"",
                "fullTitle": "hooks cnode测试用例 \"after each\" hook: afterEach for \"打开cnode，点击登录按钮\"",
                "timedOut": false,
                "duration": 254,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "async function () {\n            console.log(\"afterEach\")\n            //   截屏操作\n            await web.takeScreenshot().then(function (screenshot) {\n                let name = new Date().valueOf()+\".png\"\n                return fs.writeFileSync(util.getScreenshotsDir+\"/\"+name,screenshot, \"base64\")\n            })",
                "err": {
                  "message": "Error: ENOENT: no such file or directory, open 'D:\\AutoTest\\MyProject\\nodejsTestProject\\function () {\r\n     console.log(path.join(__dirname,\"..\",\"..\",\"\\screenShot\"))\r\n    return path.join(__dirname, \"..\", \"..\", \"\\screenShot\");\r\n}\\1507040312173.png'",
                  "estack": "Error: ENOENT: no such file or directory, open 'D:\\AutoTest\\MyProject\\nodejsTestProject\\function () {\r\n     console.log(path.join(__dirname,\"..\",\"..\",\"\\screenShot\"))\r\n    return path.join(__dirname, \"..\", \"..\", \"\\screenShot\");\r\n}\\1507040312173.png'\n    at Object.fs.openSync (fs.js:652:18)\n    at Object.fs.writeFileSync (fs.js:1299:33)\n    at uiTest\\userTest\\multipe.js:40:27\n    at ManagedPromise.invokeCallback_ (node_modules\\selenium-webdriver\\lib\\promise.js:1384:14)\n    at TaskQueue.execute_ (node_modules\\selenium-webdriver\\lib\\promise.js:3092:14)\n    at TaskQueue.executeNext_ (node_modules\\selenium-webdriver\\lib\\promise.js:3075:27)\n    at asyncRun (node_modules\\selenium-webdriver\\lib\\promise.js:2935:27)\n    at node_modules\\selenium-webdriver\\lib\\promise.js:676:7\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)"
                },
                "isRoot": false,
                "uuid": "86fda759-daf2-424e-b708-dcf743f13204",
                "parentUUID": "21355dc2-40c0-45b1-aa9f-18a7e6177a2b",
                "isHook": true,
                "skipped": false
              }
            ],
            "fullFile": "D:\\AutoTest\\MyProject\\nodejsTestProject\\uiTest\\userTest\\multipe.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": true,
            "hasAfterHooks": true,
            "hasTests": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 60000,
        "file": "\\uiTest\\userTest\\multipe.js",
        "uuid": "03ec37cf-f04c-4b0b-8415-604a109180da",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "D:\\AutoTest\\MyProject\\nodejsTestProject\\uiTest\\userTest\\multipe.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "d557c492-f8d2-4923-8480-fc71d167d095",
    "beforeHooks": [],
    "afterHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasBeforeHooks": false,
    "hasAfterHooks": false,
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "打开cnode，点击登录按钮",
      "fullTitle": "用户注册操作 打开cnode，点击登录按钮",
      "timedOut": false,
      "duration": 22839,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n                //    web = new driver.Builder().forBrowser('chrome').build();\n                await web.get(\"http://192.168.198.129:3000\")",
      "err": {},
      "isRoot": false,
      "uuid": "162fb194-3416-4a89-8b22-2b59aeb9b48e",
      "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "打开cnode，点击登录按钮",
      "fullTitle": "用户注册操作 打开cnode，点击登录按钮",
      "timedOut": false,
      "duration": 22839,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "async \n                //    web = new driver.Builder().forBrowser('chrome').build();\n                await web.get(\"http://192.168.198.129:3000\")",
      "err": {},
      "isRoot": false,
      "uuid": "162fb194-3416-4a89-8b22-2b59aeb9b48e",
      "parentUUID": "9a5cb5ca-4d08-47ce-8707-2b6135f0709b",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [
    {
      "title": "\"after each\" hook: afterEach for \"打开cnode，点击登录按钮\"",
      "fullTitle": "cnode测试用例 \"after each\" hook: afterEach for \"打开cnode，点击登录按钮\"",
      "timedOut": false,
      "duration": 254,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "async function () {\n            console.log(\"afterEach\")\n            //   截屏操作\n            await web.takeScreenshot().then(function (screenshot) {\n                let name = new Date().valueOf()+\".png\"\n                return fs.writeFileSync(util.getScreenshotsDir+\"/\"+name,screenshot, \"base64\")\n            })",
      "err": {
        "message": "Error: ENOENT: no such file or directory, open 'D:\\AutoTest\\MyProject\\nodejsTestProject\\function () {\r\n     console.log(path.join(__dirname,\"..\",\"..\",\"\\screenShot\"))\r\n    return path.join(__dirname, \"..\", \"..\", \"\\screenShot\");\r\n}\\1507040312173.png'",
        "estack": "Error: ENOENT: no such file or directory, open 'D:\\AutoTest\\MyProject\\nodejsTestProject\\function () {\r\n     console.log(path.join(__dirname,\"..\",\"..\",\"\\screenShot\"))\r\n    return path.join(__dirname, \"..\", \"..\", \"\\screenShot\");\r\n}\\1507040312173.png'\n    at Object.fs.openSync (fs.js:652:18)\n    at Object.fs.writeFileSync (fs.js:1299:33)\n    at uiTest\\userTest\\multipe.js:40:27\n    at ManagedPromise.invokeCallback_ (node_modules\\selenium-webdriver\\lib\\promise.js:1384:14)\n    at TaskQueue.execute_ (node_modules\\selenium-webdriver\\lib\\promise.js:3092:14)\n    at TaskQueue.executeNext_ (node_modules\\selenium-webdriver\\lib\\promise.js:3075:27)\n    at asyncRun (node_modules\\selenium-webdriver\\lib\\promise.js:2935:27)\n    at node_modules\\selenium-webdriver\\lib\\promise.js:676:7\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)"
      },
      "isRoot": false,
      "uuid": "86fda759-daf2-424e-b708-dcf743f13204",
      "parentUUID": "21355dc2-40c0-45b1-aa9f-18a7e6177a2b",
      "isHook": true,
      "skipped": false
    }
  ],
  "copyrightYear": 2017
}